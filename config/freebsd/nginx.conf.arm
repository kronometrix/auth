worker_processes  1;
error_log logs/error.log;

events {
    use kqueue;
    worker_connections 1024;
    multi_accept on;
}

http {
    upstream kernel {
        server 127.0.0.1:9002;
        keepalive 32;
    }

    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;

    include       mime.types;
    default_type  application/octet-stream;

    # access_log logs/access.log.gz combined gzip flush=5m;
    access_log off;

    resolver 8.8.8.8;

    ## General Options
    sendfile       on;
    sendfile_max_chunk  512k;
    tcp_nopush     on;
    tcp_nodelay    on;

    keepalive_timeout 60;
    reset_timedout_connection on;

    gzip off;

    lua_package_path ";;${prefix}../app/?.lua;";
    lua_code_cache on;
    lua_shared_dict sessions 10m;
    lua_shared_dict my_limit_req_store 10m;
    lua_shared_dict timer_locks 1m;
    init_by_lua_file "../app/init.lua";
    init_worker_by_lua_file "../app/timer.lua";

    server {
        listen 80;
        index index.html;
        root ../static;

        # include application routes; this path is relative to this conf file!
        # enable this to have HTTP and HTTPS access
        # include ../../app/conf/*.conf;
    
        # HTTPS only
        include ../../app/conf/unsecured/*.conf;
    }

    server {
        listen 443 ssl;
        ssl_certificate k500.crt;
        ssl_certificate_key k500.key;

        index index.html;
        root ../static;

        # include application routes; this path is relative to this conf file!
        include ../../app/conf/*.conf;
    }

    server {
        listen 127.0.0.1:9101;
        index index.html;
        root ../static;

        # include application routes; this path is relative to this conf file!
        include ../../app/conf/auth-api.conf;
    }
}
