#!/bin/sh

#BSD 3-Clause License
#
#Copyright (c) 2018, SDR Dynamics, Stefan Parvu
#All rights reserved.
#
#Redistribution and use in source and binary forms, with or without
#modification, are permitted provided that the following conditions are met:
#
#* Redistributions of source code must retain the above copyright notice, this
#  list of conditions and the following disclaimer.
#
#* Redistributions in binary form must reproduce the above copyright notice,
#  this list of conditions and the following disclaimer in the documentation
#  and/or other materials provided with the distribution.
#
#* Neither the name of the copyright holder nor the names of its
#  contributors may be used to endorse or promote products derived from
#  this software without specific prior written permission.
#
#THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
#DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
#FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
#SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
#OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
#OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

RETVAL=0
OS_NAME=`uname -s`

BASEDIR="/opt/kronometrix/auth"
REDIS_CMD="${BASEDIR}/bin/redis-server"
REDIS_CONF="${BASEDIR}/etc/redis.conf"
REDISCLI_CMD="${BASEDIR}/bin/redis-cli"
REDIS_PID="${BASEDIR}/logs/redis.pid"
REDIS_SOCK="${BASEDIR}/logs/auth.sock"

# basedir test
test -d ${BASEDIR} || exit 0


start() {
    echo "Starting Kronometrix auth db service"

    if [ "X${OS_NAME}" = "XSunOS" ]; then
        echo " ${rep} service: \c"
    else
        echo -n " ${rep} service: "
    fi  

    if [ -f ${REDIS_PID} ]; then
        kill -0 `cat ${REDIS_PID}` >/dev/null 2>&1
        if [ $? -eq  1 ]; then
            rm ${REDIS_PID}
            $REDIS_CMD $REDIS_CONF
            RETVAL=$?
        else
            RETVAL=1
        fi
    else
        $REDIS_CMD $REDIS_CONF 2>/dev/null &
        RETVAL=$?
    fi

    [ $RETVAL -eq 0 ] && echo "ok" || echo "failed"

    return $RETVAL
}


stop() {
    echo "Stopping Kronometrix auth db service"


    if [ "X${OS_NAME}" = "XSunOS" ]; then
        echo " ${rep} service: \c"
    else
        echo -n " ${rep} service: "
    fi


    if [ -e ${REDIS_SOCK} ]; then
        $REDISCLI_CMD -s $REDIS_SOCK shutdown >/dev/null 2>&1
        RETVAL=$?
        [ $RETVAL -eq 0 ] && echo "ok" || echo "failed"
    else
        if [ -f ${REDIS_PID} ]; then
            $REDISCLI_CMD shutdown >/dev/null 2>&1
            RETVAL=$?
            [ $RETVAL -eq 0 ] && echo "ok" || echo "failed"
        else
            RETVAL=1
            [ $RETVAL -eq 0 ] && echo "ok" || echo "failed"
        fi
    fi

    return $RETVAL
}


case "$1" in
   start)
      start
      ;;
   stop)
      stop
      ;;
   restart)
      stop
      start
      ;;
   *)
      echo "Usage: $0 {start|stop|restart}"
      exit 1
esac
exit $RETVAL
